// import { User } from "./User";

/*
Состояния заказа (State)
    Created — заказ создан, ожидает оплаты
    Paid — заказ оплачен
    Shipped — заказ передан в доставку
    Delivered — заказ доставлен клиенту
    Cancelled — заказ отменён
(Дополнительно, опционально: Returned, Refunded)

Правила переходов:
    Из Created → можно pay() или cancel().
    Из Paid → можно ship() или cancel().
    Из Shipped → можно deliver().
    Из Delivered → можно return() (опционально).
    Из Returned → можно refund().
    Из Cancelled или Refunded → никаких действий больше нельзя.

Действия заказа:
    pay() — оплата заказа (снимает деньги с баланса пользователя)
    ship() — отправка заказа
    deliver() — доставка заказа
    cancel() — отмена заказа
    return() — возврат товара (опционально)
    refund() — возврат денег клиенту (опционально)
*/

class Created {
	// Created → можно pay() или cancel()

	pay(order) {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log(`Заказ "${order.getTitle()}" оплачен.`);
		order.setState(new Paid());
	}
	ship() {
		// — отправка заказа
		console.log("Отправка невозможна, оплатите заказ.");
	}
	deliver() {
		// — доставка заказа
		console.log("Доставка невозможна, оплатите заказ.");
	}
	cancel(order) {
		// — отмена заказа
		console.log(`Заказ "${order.getTitle()}" отменен.`);
		order.setState(new Cancelled());
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат товара невозможен, заказ не доставлен.");
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств невозможен, возврат не выполнен.");
	}
}

class Paid {
	// Paid → можно ship() или cancel()
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Заказ уже оплачен.");
	}
	ship(order) {
		// — отправка заказа
		console.log(`Заказ "${order.getTitle()}" отправлен.`);
		order.setState(new Shipped());
	}
	deliver() {
		// — доставка заказа
		console.log("Доставка невозможна, отправьте заказ.");
	}
	cancel(order) {
		// — отмена заказа
		console.log(`Заказ "${order.getTitle()}" отменен.`);
		order.setState(new Cancelled());
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат товара невозможен, заказ не доставлен.");
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств невозможен, возврат не выполнен.");
	}
}

class Shipped {
	// Shipped → можно deliver()
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Заказ уже оплачен и отправлен.");
	}
	ship() {
		// — отправка заказа
		console.log("Заказ уже отправлен.");
	}
	deliver(order) {
		// — доставка заказа
		console.log(`Заказ "${order.getTitle()}" доставлен.`);
		order.setState(new Delivered());
	}
	cancel() {
		// — отмена заказа
		console.log("Отменить заказ невозможно, заказ в пути.");
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат товара невозможен, заказ не доставлен.");
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств невозможен, возврат не выполнен.");
	}
}

class Delivered {
	// Delivered → можно return() (опционально)
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Оплата невозможна, заказ уже доставлен.");
	}
	ship() {
		// — отправка заказа
		console.log("Отправка невозможна, заказ уже доставлен.");
	}
	deliver() {
		// — доставка заказа
		console.log("Заказ уже доставлен.");
	}
	cancel() {
		// — отмена заказа
		console.log("Отмена невозможна, товар уже доставлен.");
	}
	return(order) {
		// — возврат товара (опционально)
		console.log(`Выполнен возврат заказа "${order.getTitle()}".`);
		order.setState(new Returned());
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств невозможен, возврат не выполнен.");
	}
}

class Returned {
	// Returned → можно refund()
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Оплата невозможна, выполнен возврат.");
	}
	ship() {
		// — отправка заказа
		console.log("Отправка невозможна, выполнен возврат.");
	}
	deliver() {
		// — доставка заказа
		console.log("Доставка невозможна, выполнен возврат.");
	}
	cancel() {
		// — отмена заказа
		console.log("Отмена невозможна, выполнен возврат.");
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат товара уже выполнен.");
	}
	refund(order) {
		// — возврат денег клиенту (опционально)
		console.log(`Возврат денежных средств за заказ "${order.getTitle()}" выполнен.`);
		order.setState(new Refunded());
	}
}

class Cancelled {
	// Cancelled → никаких действий больше нельзя
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Оплата невозможна, заказ отменен.");
	}
	ship() {
		// — отправка заказа
		console.log("Отправка невозможна, заказ отменен.");
	}
	deliver() {
		// — доставка заказа
		console.log("Доставка невозможна, заказ отменен.");
	}
	cancel() {
		// — отмена заказа
		console.log("Заказ уже отменен.");
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат товара невозможен, заказ отменен.");
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств невозможен, заказ отменен.");
	}
}

class Refunded {
	// Refunded → никаких действий больше нельзя
	pay() {
		// — оплата заказа (снимает деньги с баланса пользователя)
		console.log("Оплата невозможна, выполнен возврат денежных.");
	}
	ship() {
		// — отправка заказа
		console.log("Отправка невозможна, выполнен возврат денежных.");
	}
	deliver() {
		// — доставка заказа
		console.log("Доставка невозможна, выполнен возврат денежных.");
	}
	cancel() {
		// — отмена заказа
		console.log("Отмена невозможна, выполнен возврат денежных.");
	}
	return() {
		// — возврат товара (опционально)
		console.log("Возврат невозможен, выполнен возврат денежных.");
	}
	refund() {
		// — возврат денег клиенту (опционально)
		console.log("Возврат денежных средств уже выполнен.");
	}
}

export { Created };
